{"version":3,"sources":["components/InputPanel/InputPanel.module.scss","App.module.scss","components/OptionsPanel/OptionsPanel.module.scss","components/OutputPanel/OutputPanel.module.scss","../node_modules/prettier sync","stores/inputStore.ts","components/InputPanel/InputPanel.tsx","stores/optionsStore.ts","components/OptionsPanel/OptionsPanel.tsx","utils/jsonTypeGuards.ts","utils/jsonTypeTreeUtils.ts","utils/typeTextUtils.ts","utils/compareUtils.ts","components/OutputPanel/OutputPanel.tsx","App.tsx","index.tsx"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","useInputStore","create","persist","combine","input","_hydrated","set","setInput","_setHydrated","name","version","getStorage","localStorage","partialize","s","Object","fromEntries","entries","filter","startsWith","onRehydrateStorage","stateBeforeHydration","stateAfterHydration","hydrationError","InputPanel","handleInputChange","useCallback","target","value","className","styles","root","onChange","useOptionsStore","typeOrInterface","splitOrCombined","sortProperties","preferredTypeForUndeterminable","defaultArrayType","setOptions","options","OptionsPanel","optionsStore","shallow","handleChangeOption","dataset","option","isParsableObject","obj","generateTypeTreeFromObject","Array","isArray","length","type","children","map","key","optional","combineTypeTrees","a","b","from","Set","aValue","find","bValue","concat","combineManyTypeTrees","trees","slice","reduce","acc","curr","generateTypesFromTree","tree","sort","localeCompare","undefined","sensitivity","usage","numeric","compareStringsAlphanum","join","processedChildren","dedup","arr","OutputPanel","types","parsedInputs","split","json5","parse","typeTree","console","log","prettier","format","parser","plugins","prettierTypescriptPlugin","generateTypes","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c74d05ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"InputPanel_root__3DfTW\",\"input\":\"InputPanel_input__10_13\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__2CSG3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"OptionsPanel_root__DWrHb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"OutputPanel_root__1OK2k\"};","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 58;","import create from 'zustand'\nimport { combine, persist } from 'zustand/middleware'\n\nexport const useInputStore = create(\n  persist(\n    combine(\n      {\n        input: '' as string,\n\n        _hydrated: false,\n      },\n      (set) => ({\n        setInput: (input: string) => set({ input }),\n\n        _setHydrated: () => set({ _hydrated: true }),\n      })\n    ),\n    {\n      name: 'json_to_ts:inputStore',\n      version: 1,\n      getStorage: () => localStorage,\n      partialize: (s) => Object.fromEntries(Object.entries(s).filter(([k]) => !k.startsWith('_'))),\n      onRehydrateStorage: (stateBeforeHydration) => {\n        return (stateAfterHydration, hydrationError) => {\n          stateAfterHydration?._setHydrated()\n        }\n      },\n    }\n  )\n)\n","import React, { useCallback } from 'react'\n\nimport { useInputStore } from '../../stores/inputStore'\nimport styles from './InputPanel.module.scss'\n\ntype InputPanelProps = {}\nexport const InputPanel: React.VFC<InputPanelProps> = () => {\n  const [input, setInput] = useInputStore((s) => [s.input, s.setInput])\n\n  const handleInputChange = useCallback<React.ChangeEventHandler<HTMLTextAreaElement>>(\n    (e) => {\n      setInput(e.target.value)\n    },\n    [setInput]\n  )\n\n  return (\n    <div className={styles.root}>\n      <textarea className={styles.input} value={input} onChange={handleInputChange} />\n    </div>\n  )\n}\n","import create from 'zustand'\nimport { combine, persist } from 'zustand/middleware'\n\nexport const useOptionsStore = create(\n  persist(\n    combine(\n      {\n        typeOrInterface: 'type' as 'type' | 'interface',\n        splitOrCombined: 'combined' as 'split' | 'combined',\n        sortProperties: 'alphanum' as 'alphanum' | 'none',\n        preferredTypeForUndeterminable: 'unknown' as 'unknown' | 'any',\n        defaultArrayType: 'array' as 'array' | 'tuple',\n\n        _hydrated: false,\n      },\n      (set) => ({\n        setOptions: (options: Omit<Parameters<typeof set>[0], '_hydrated'>) => set(options),\n\n        _setHydrated: () => set({ _hydrated: true }),\n      })\n    ),\n    {\n      name: 'json_to_ts:optionsStore',\n      version: 1,\n      getStorage: () => localStorage,\n      partialize: (s) => Object.fromEntries(Object.entries(s).filter(([k]) => !k.startsWith('_'))),\n      onRehydrateStorage: (stateBeforeHydration) => {\n        return (stateAfterHydration, hydrationError) => {\n          stateAfterHydration?._setHydrated()\n        }\n      },\n    }\n  )\n)\n","import React, { useCallback } from 'react'\nimport shallow from 'zustand/shallow'\n\nimport { useOptionsStore } from '../../stores/optionsStore'\nimport styles from './OptionsPanel.module.scss'\n\nexport type OptionsPanelProps = {}\nexport const OptionsPanel: React.VFC<OptionsPanelProps> = () => {\n  const optionsStore = useOptionsStore((s) => s, shallow)\n\n  const handleChangeOption = useCallback<React.ChangeEventHandler<HTMLSelectElement>>(\n    (e) => {\n      optionsStore.setOptions({ [e.target.dataset.option as keyof typeof optionsStore]: e.target.value })\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [optionsStore.setOptions]\n  )\n\n  return (\n    <div className={styles.root}>\n      <select\n        data-option={((): keyof typeof optionsStore => 'preferredTypeForUndeterminable')()}\n        value={optionsStore.preferredTypeForUndeterminable}\n        onChange={handleChangeOption}\n      >\n        <option value=\"any\">any</option>\n        <option value=\"unknown\">unknown</option>\n      </select>\n    </div>\n  )\n}\n","export function isParsableObject(obj: object): obj is object | any[] {\n  return typeof obj === 'object' && obj !== null\n}\n","import { JsonSimpleTypes, JsonTypeDefinition } from '../type/JsonTypeDefTypes'\nimport { isParsableObject } from './jsonTypeGuards'\n\nexport function generateTypeTreeFromObject(obj: object | any[]): JsonTypeDefinition {\n  if (Array.isArray(obj)) {\n    if (obj.length === 0) {\n      return {\n        type: 'array',\n      }\n    }\n    return {\n      type: 'array',\n      children: obj.map((e) => {\n        if (isParsableObject(e)) {\n          return generateTypeTreeFromObject(e)\n        } else if (e === null) {\n          return { type: 'null' }\n        } else {\n          return {\n            type: typeof e as JsonSimpleTypes,\n            value: e,\n          }\n        }\n      }),\n    }\n  }\n\n  const entries = Object.entries(obj)\n  if (entries.length === 0) {\n    return {\n      type: 'object',\n    }\n  } else {\n    return {\n      type: 'object',\n      children: entries.map<{ key: string; type: JsonTypeDefinition; optional: boolean }>(([key, value]) => {\n        if (isParsableObject(value)) {\n          return {\n            key,\n            type: generateTypeTreeFromObject(value),\n            optional: false,\n          }\n        } else if (value === null) {\n          return {\n            key,\n            type: { type: 'null' },\n            optional: false,\n          }\n        } else {\n          return {\n            key,\n            type: {\n              type: typeof value as JsonSimpleTypes,\n              value,\n            },\n            optional: false,\n          }\n        }\n      }),\n    }\n  }\n}\n\nexport function combineTypeTrees(a: JsonTypeDefinition, b: JsonTypeDefinition): JsonTypeDefinition {\n  if (a.type === 'object') {\n    if (b.type === 'object') {\n      if ((a.children == null || a.children.length === 0) && (b.children == null || b.children.length === 0)) {\n        return { type: 'object' }\n      }\n\n      if (a.children == null || a.children.length === 0) {\n        return { type: 'object', children: b.children!.map((e) => ({ ...e, optional: true })) }\n      }\n      if (b.children == null || b.children.length === 0) {\n        return { type: 'object', children: a.children!.map((e) => ({ ...e, optional: true })) }\n      }\n\n      return {\n        type: 'object',\n        children: Array.from(new Set([...a.children.map(({ key }) => key), ...b.children.map(({ key }) => key)])).map<\n          typeof a.children[number]\n        >((key) => {\n          const aValue = a.children!.find(({ key: key2 }) => key2 === key)\n          const bValue = b.children!.find(({ key: key2 }) => key2 === key)\n\n          if (aValue == null) return { ...bValue!, optional: true }\n          if (bValue == null) return { ...aValue!, optional: true }\n\n          return {\n            key,\n            type: combineTypeTrees(aValue.type, bValue.type),\n            optional: false,\n          }\n        }),\n      }\n    } else {\n      return {\n        type: 'combination',\n        children: [a, b],\n      }\n    }\n  } else if (a.type === 'array') {\n    if (b.type === 'array') {\n      if ((a.children == null || a.children.length === 0) && (b.children == null || b.children.length === 0)) {\n        return { type: 'array' }\n      }\n\n      if (a.children == null || a.children.length === 0) {\n        return { type: 'array', children: b.children! }\n      }\n      if (b.children == null || b.children.length === 0) {\n        return { type: 'array', children: a.children! }\n      }\n\n      return {\n        type: 'array',\n        children: a.children.concat(b.children),\n      }\n    } else {\n      return {\n        type: 'combination',\n        children: [a, b],\n      }\n    }\n  } else if (a.type !== b.type) {\n    return {\n      type: 'combination',\n      children: [a, b],\n    }\n  } else {\n    return a\n  }\n}\n\nexport function combineManyTypeTrees(trees: JsonTypeDefinition[]): JsonTypeDefinition {\n  if (trees.length === 1) return trees[0]\n\n  return trees.slice(1).reduce((acc, curr) => combineTypeTrees(acc, curr), trees[0])\n}\n","import { useOptionsStore } from '../stores/optionsStore'\nimport { JsonTypeDefinition } from '../type/JsonTypeDefTypes'\nimport { compareStringsAlphanum } from './compareUtils'\n\nexport function generateTypesFromTree(\n  tree: JsonTypeDefinition,\n  options: Pick<ReturnType<typeof useOptionsStore['getState']>, 'preferredTypeForUndeterminable'>\n): string {\n  if (tree.type === 'object') {\n    if (tree.children == null || tree.children.length === 0) {\n      return '{}'\n    } else {\n      return (\n        '{' +\n        tree.children\n          .sort(({ key: a }, { key: b }) => compareStringsAlphanum(a, b))\n          .map(({ key, type, optional }) => [\"'\" + key + \"'\", generateTypesFromTree(type, options)].join(optional ? '?: ' : ': '))\n          .join('; ') +\n        '}'\n      )\n    }\n  } else if (tree.type === 'array') {\n    const processedChildren =\n      tree.children != null ? dedup(tree.children.map((e) => generateTypesFromTree(e, options))) : null\n    if (processedChildren == null || processedChildren.length === 0) {\n      return `${options.preferredTypeForUndeterminable}[]`\n    } else {\n      if (processedChildren.length === 1) {\n        return `${processedChildren[0]}[]`\n      } else {\n        return '(' + processedChildren.join(' | ') + ')[]'\n      }\n    }\n  } else if (tree.type === 'combination') {\n    return dedup(tree.children.map((e) => generateTypesFromTree(e, options))).join(' | ')\n  } else {\n    return tree.type\n  }\n}\n\nfunction dedup(arr: string[]) {\n  return Array.from(new Set(arr))\n}\n","export function compareStringsAlphanum(a: string, b: string): number {\n  return a.localeCompare(b, undefined, { sensitivity: 'base', usage: 'sort', numeric: true })\n}\n","import json5 from 'json5'\nimport prettier from 'prettier'\nimport prettierTypescriptPlugin from 'prettier/parser-typescript'\nimport React from 'react'\nimport shallow from 'zustand/shallow'\n\nimport { useInputStore } from '../../stores/inputStore'\nimport { useOptionsStore } from '../../stores/optionsStore'\nimport { isParsableObject } from '../../utils/jsonTypeGuards'\nimport { combineManyTypeTrees, generateTypeTreeFromObject } from '../../utils/jsonTypeTreeUtils'\nimport { generateTypesFromTree } from '../../utils/typeTextUtils'\nimport styles from './OutputPanel.module.scss'\n\ntype OutputPanelProps = {}\nexport const OutputPanel: React.VFC<OutputPanelProps> = () => {\n  const input = useInputStore((s) => s.input)\n  const options = useOptionsStore((s) => s, shallow)\n\n  const types = generateTypes(input, options)\n\n  return <div className={styles.root}>{types}</div>\n}\n\nfunction generateTypes(input: string, options: ReturnType<typeof useOptionsStore['getState']>): string {\n  try {\n    const splitInputs = input.split('\\n-----\\n')\n    const parsedInputs = splitInputs.map((e) => json5.parse(e)).filter(isParsableObject)\n    if (parsedInputs.length === 0) return ''\n\n    const typeTree = combineManyTypeTrees(parsedInputs.map((e) => generateTypeTreeFromObject(e)))\n    console.log(typeTree)\n    const types = generateTypesFromTree(typeTree, options)\n    console.log(types)\n    const formattedTypes = prettier.format('type Root = ' + types, {\n      parser: 'typescript',\n      plugins: [prettierTypescriptPlugin],\n    })\n\n    return formattedTypes\n  } catch (e) {\n    console.log(e)\n    return ''\n  }\n}\n","import React from 'react'\n\nimport styles from './App.module.scss'\nimport { InputPanel } from './components/InputPanel/InputPanel'\nimport { OptionsPanel } from './components/OptionsPanel/OptionsPanel'\nimport { OutputPanel } from './components/OutputPanel/OutputPanel'\n\nexport const App: React.VFC = () => {\n  return (\n    <div className={styles.root}>\n      <OptionsPanel />\n      <InputPanel />\n      <OutputPanel />\n    </div>\n  )\n}\n","import './index.scss'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { App } from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}